@model livraria_les.Models.Livro

@{
    ViewBag.Title = "Editar";
}

<br />

@if (string.IsNullOrWhiteSpace(ViewBag.Erro))
{
    if (!string.IsNullOrWhiteSpace(ViewBag.Message))
    {
        <div class="alert alert-success">@ViewBag.Message</div>
    }
}
else
{
    string erro = ViewBag.Erro;
    erro = erro.Replace("//", "<br />");
    <div class="alert alert-danger">@Html.Raw(erro)</div>
}

<h2>Editar</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Ativo)
        <div class="form-group">
            @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Autor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="AutorDDL" name="AutorDDL">
                    @foreach (var item in ViewBag.AutorDDL as SelectList)
                    {
                        <option value="@item.Value" @item.Selected>@item.Text</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Editora, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="EditoraDDL" name="EditoraDDL">
                    @foreach (var item in ViewBag.EditoraDDL as SelectList)
                    {
                        <option value="@item.Value" @item.Selected>@item.Text</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ano, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ano, new { htmlAttributes = new { @class = "form-control", @data_mask = "0000" } })
                @Html.ValidationMessageFor(model => model.Ano, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Edicao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Edicao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Edicao, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Categorias, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @for (int i = 0; i < ViewBag.CategoriasDDL.Count; i++)
                    {
                        <label class="checkbox-inline"><input type="checkbox" name="CategoriasDDL" value="@ViewBag.CategoriasDDL[i].Id">@ViewBag.CategoriasDDL[i].Nome</label>
                    }
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Subcategoria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="SubcategoriaDDL" name="SubcategoriaDDL">
                    @foreach (var item in ViewBag.SubcategoriaDDL as SelectList)
                    {
                        <option value="@item.Value" @item.Selected>@item.Text</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sinopse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sinopse, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sinopse, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control", @data_mask = "000-00-000-0000-0" } })
                @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodBarras, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodBarras, new { htmlAttributes = new { @class = "form-control", @data_mask = "0000000000000" } })
                @Html.ValidationMessageFor(model => model.CodBarras, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GrupoPrecificacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="GrupoPrecificacaoDDL" name="GrupoPrecificacaoDDL">
                    @foreach (var item in ViewBag.GrupoPrecificacaoDDL as SelectList)
                    {
                        <option value="@item.Value" @item.Selected>@item.Text</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumPag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumPag, new { htmlAttributes = new { @class = "form-control", @data_mask = "00000" } })
                @Html.ValidationMessageFor(model => model.NumPag, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dimensoes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dimensoes, new { htmlAttributes = new { @class = "form-control", @placeholder = "10x10x5" } })
                @Html.ValidationMessageFor(model => model.Dimensoes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Peso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Peso, new { htmlAttributes = new { @class = "form-control", @placeholder = "1.5" } })
                @Html.ValidationMessageFor(model => model.Peso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.ValorVenda)
            @Html.LabelFor(model => model.ValorNovaVenda, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorNovaVenda, new { htmlAttributes = new { @class = "form-control", @placeholder = "10,00" } })
                @Html.ValidationMessageFor(model => model.ValorNovaVenda, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Alterar" class="btn btn-success" />
                @Html.ActionLink("Voltar", "Index")
            </div>
        </div>
    </div>
}
